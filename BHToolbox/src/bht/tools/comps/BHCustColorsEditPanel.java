/*
 * BHCustColorsEditPanel.java
 *
 * Created on Mar 14, 2011, 7:56:01 PM
 */

package bht.tools.comps;

import bht.resources.Icons;
import bht.tools.fx.Colors;
import javax.swing.colorchooser.AbstractColorChooserPanel;

/**
 *
 * @author Supuhstar
 */
public class BHCustColorsEditPanel extends javax.swing.JPanel
{

  /**
   * Creates new form CustColorsEditDialog
   * @param original the Colors object from which this CustColorsEditDialog will start
   */
  public BHCustColorsEditPanel(Colors original)
  {
    long last = System.nanoTime(), start = last;
    System.out.println("CustColorsEditPanel:  Initializing BHColorChooserPanel...");
    mainColors = original;
    
    BHColorChooserPanel = new AbstractColorChooserPanel()
    {
      @Override
      public void updateChooser()
      {
//        System.out.println("Update");
      }

      @Override
      protected void buildChooser()
      {
        new Colors().fixStyleIn(bhChooserPanel);
        java.awt.BorderLayout b = new java.awt.BorderLayout();
        setLayout(b);
        add(bhChooserPanel, java.awt.BorderLayout.CENTER);
      }

      @Override
      public String getDisplayName()
      {
        return "BH Colors";
      }

      @Override
      public javax.swing.Icon getSmallDisplayIcon()
      {
        return Icons.getIcon(Icons.INFO_16);
      }

      @Override
      public javax.swing.Icon getLargeDisplayIcon()
      {
        return Icons.getIcon(Icons.INFO_32);
      }
    };

    System.out.println("CustColorsEditPanel:  Initializing ColorTimer... (" + bht.tools.util.math.Numbers.groupDigits(System.nanoTime() - last) + ")");
    last = System.nanoTime();
    colorTimer = new javax.swing.Timer(100, new java.awt.event.ActionListener() 
    {
      public void actionPerformed(java.awt.event.ActionEvent e)
      {
        mainColors.setCustomColor(jColorChooser.getColor(), part);
        mainColors.fixStyleIn(previewPanel, mainColors.CUSTOM);
      }
    });

    System.out.println("CustColorsEditPanel:  Initializing Components... (" + bht.tools.util.math.Numbers.groupDigits(System.nanoTime() - last) + ")");
    last = System.nanoTime();
    initComponents();

    System.out.println("CustColorsEditPanel:  Setting up UI... (" + bht.tools.util.math.Numbers.groupDigits(System.nanoTime() - last) + ")");
    last = System.nanoTime();
    setBackRadioButton.doClick();
    mainColors.setCustomColor(jColorChooser.getColor(), part);
    mainColors.fixStyleIn(previewPanel, mainColors.CUSTOM);
    System.out.println("CustColorsEditPanel creation complete (" + bht.tools.util.math.Numbers.groupDigits(System.nanoTime() - start) + ")");
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        setColorButtonGroup = new javax.swing.ButtonGroup();
        bhChooserPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        useMochaButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        useHuskyButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        useAstroButton = new javax.swing.JButton();
        colorChooserPreviewPanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        optionsPanel = new javax.swing.JPanel();
        setBackRadioButton = new javax.swing.JRadioButton();
        setBoxRadioButton = new javax.swing.JRadioButton();
        setBorderRadioButton = new javax.swing.JRadioButton();
        setTextRadioButton = new javax.swing.JRadioButton();
        setTextAreaRadioButton = new javax.swing.JRadioButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jColorChooser = new javax.swing.JColorChooser();
        previewPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSlider1 = new javax.swing.JSlider();
        jProgressBar1 = new javax.swing.JProgressBar();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jSpinner1 = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        bhChooserPanel.setOpaque(false);
        bhChooserPanel.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        useMochaButton.setText("Use default Mocha color");
        useMochaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useMochaButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 128;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(useMochaButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bhChooserPanel.add(jPanel1, gridBagConstraints);
        jPanel1.getAccessibleContext().setAccessibleDescription(Colors.COLOR_STYLE_OVERRIDE + Colors.MOCHA + Colors.COMMAND_SEP);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        useHuskyButton.setText("Use default Husky color");
        useHuskyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useHuskyButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 128;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(useHuskyButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bhChooserPanel.add(jPanel2, gridBagConstraints);
        jPanel2.getAccessibleContext().setAccessibleDescription(Colors.COLOR_STYLE_OVERRIDE + Colors.HUSKY + Colors.COMMAND_SEP);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        useAstroButton.setText("Use default Astro color");
        useAstroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useAstroButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 128;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(useAstroButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bhChooserPanel.add(jPanel3, gridBagConstraints);
        jPanel3.getAccessibleContext().setAccessibleDescription(Colors.COLOR_STYLE_OVERRIDE + Colors.ASTRO + Colors.COMMAND_SEP);

        colorChooserPreviewPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        colorChooserPreviewPanel.setMinimumSize(new java.awt.Dimension(64, 64));
        colorChooserPreviewPanel.setLayout(new java.awt.BorderLayout());

        jButton2.setText("Set Custom Color");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        colorChooserPreviewPanel.add(jButton2, java.awt.BorderLayout.CENTER);

        setLayout(new java.awt.BorderLayout());

        optionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));
        optionsPanel.setLayout(new java.awt.GridBagLayout());

        setColorButtonGroup.add(setBackRadioButton);
        setBackRadioButton.setText("Set overall background");
        setBackRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBackRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        optionsPanel.add(setBackRadioButton, gridBagConstraints);

        setColorButtonGroup.add(setBoxRadioButton);
        setBoxRadioButton.setText("<html>Set second-level background<br/>(Buttons, etc.)</html>");
        setBoxRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBoxRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        optionsPanel.add(setBoxRadioButton, gridBagConstraints);

        setColorButtonGroup.add(setBorderRadioButton);
        setBorderRadioButton.setText("Set border");
        setBorderRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setBorderRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        optionsPanel.add(setBorderRadioButton, gridBagConstraints);

        setColorButtonGroup.add(setTextRadioButton);
        setTextRadioButton.setText("Set text");
        setTextRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTextRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        optionsPanel.add(setTextRadioButton, gridBagConstraints);

        setColorButtonGroup.add(setTextAreaRadioButton);
        setTextAreaRadioButton.setText("Set text area");
        setTextAreaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setTextAreaRadioButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        optionsPanel.add(setTextAreaRadioButton, gridBagConstraints);

        add(optionsPanel, java.awt.BorderLayout.EAST);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setOneTouchExpandable(true);

        jColorChooser.setPreviewPanel(colorChooserPreviewPanel);
        jColorChooser.addChooserPanel(BHColorChooserPanel);
        jSplitPane1.setTopComponent(jColorChooser);

        previewPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        previewPanel.setMinimumSize(new java.awt.Dimension(256, 256));
        previewPanel.setPreferredSize(new java.awt.Dimension(473, 256));
        previewPanel.setLayout(new java.awt.GridBagLayout());

        jButton1.setText(jButton1.getClass().getSimpleName());
        jButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jButton1, gridBagConstraints);

        jToggleButton1.setText(jToggleButton1.getClass().getSimpleName());
        jToggleButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jToggleButton1, gridBagConstraints);

        jCheckBox1.setText(jCheckBox1.getClass().getSimpleName());
        jCheckBox1.setMinimumSize(new java.awt.Dimension(0, 0));
        jCheckBox1.setOpaque(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jCheckBox1, gridBagConstraints);

        jRadioButton1.setText(jRadioButton1.getClass().getSimpleName());
        jRadioButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        jRadioButton1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jRadioButton1, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JComboBox" }));
        jComboBox1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jComboBox1, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(0, 0));

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "JList" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jScrollPane1, gridBagConstraints);

        jTextField1.setText(jTextField1.getClass().getSimpleName());
        jTextField1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jTextField1, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(0, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText(jTextArea1.getClass().getSimpleName());
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jScrollPane2, gridBagConstraints);

        jSlider1.setBorder(javax.swing.BorderFactory.createTitledBorder("JSlider"));
        jSlider1.setMinimumSize(new java.awt.Dimension(0, 0));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jSlider1, gridBagConstraints);

        jProgressBar1.setValue(jSlider1.getValue());
        jProgressBar1.setMinimumSize(new java.awt.Dimension(0, 0));
        jProgressBar1.setString(jProgressBar1.getClass().getSimpleName());
        jProgressBar1.setStringPainted(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jProgressBar1, gridBagConstraints);

        jFormattedTextField1.setText(jFormattedTextField1.getClass().getSimpleName());
        jFormattedTextField1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jFormattedTextField1, gridBagConstraints);

        jPasswordField1.setText(jPasswordField1.getClass().getSimpleName());
        jPasswordField1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jPasswordField1, gridBagConstraints);

        jSpinner1.setMinimumSize(new java.awt.Dimension(0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jSpinner1, gridBagConstraints);

        jSeparator1.setBorder(javax.swing.BorderFactory.createTitledBorder("JSeparator"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jSeparator1, gridBagConstraints);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(0, 0));

        jTextPane1.setText(jTextPane1.getClass().getSimpleName());
        jScrollPane3.setViewportView(jTextPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jScrollPane3, gridBagConstraints);

        jScrollPane4.setMinimumSize(new java.awt.Dimension(0, 0));

        jEditorPane1.setText(jEditorPane1.getClass().getSimpleName());
        jScrollPane4.setViewportView(jEditorPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        previewPanel.add(jScrollPane4, gridBagConstraints);

        jSplitPane1.setRightComponent(previewPanel);
        previewPanel.getAccessibleContext().setAccessibleDescription(Colors.COLOR_STYLE_OVERRIDE + mainColors.CUSTOM + Colors.COMMAND_SEP);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void setBackRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setBackRadioButtonActionPerformed
    {//GEN-HEADEREND:event_setBackRadioButtonActionPerformed
      part = Colors.BACK;
      fixColor();
}//GEN-LAST:event_setBackRadioButtonActionPerformed

    private void setBoxRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setBoxRadioButtonActionPerformed
    {//GEN-HEADEREND:event_setBoxRadioButtonActionPerformed
      part = Colors.BOX;
      fixColor();
}//GEN-LAST:event_setBoxRadioButtonActionPerformed

    private void setBorderRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setBorderRadioButtonActionPerformed
    {//GEN-HEADEREND:event_setBorderRadioButtonActionPerformed
      part = Colors.BORDER;
      fixColor();
}//GEN-LAST:event_setBorderRadioButtonActionPerformed

    private void setTextRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setTextRadioButtonActionPerformed
    {//GEN-HEADEREND:event_setTextRadioButtonActionPerformed
      part = Colors.TEXT;
      fixColor();
}//GEN-LAST:event_setTextRadioButtonActionPerformed

    private void setTextAreaRadioButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setTextAreaRadioButtonActionPerformed
    {//GEN-HEADEREND:event_setTextAreaRadioButtonActionPerformed
      part = Colors.TEXT_AREA;
      fixColor();
}//GEN-LAST:event_setTextAreaRadioButtonActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox1ActionPerformed
    {//GEN-HEADEREND:event_jCheckBox1ActionPerformed
      jProgressBar1.setIndeterminate(jCheckBox1.isSelected());
}//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_jSlider1StateChanged
    {//GEN-HEADEREND:event_jSlider1StateChanged
      jProgressBar1.setValue(jSlider1.getValue());
}//GEN-LAST:event_jSlider1StateChanged

    private void useMochaButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_useMochaButtonActionPerformed
    {//GEN-HEADEREND:event_useMochaButtonActionPerformed
      setCustomColor(Colors.MOCHA);
}//GEN-LAST:event_useMochaButtonActionPerformed

    private void useHuskyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_useHuskyButtonActionPerformed
    {//GEN-HEADEREND:event_useHuskyButtonActionPerformed
      setCustomColor(Colors.HUSKY);
}//GEN-LAST:event_useHuskyButtonActionPerformed

    private void useAstroButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_useAstroButtonActionPerformed
    {//GEN-HEADEREND:event_useAstroButtonActionPerformed
      setCustomColor(Colors.ASTRO);
}//GEN-LAST:event_useAstroButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
      mainColors.setCustomColor(jColorChooser.getColor(), part);
      mainColors.fixStyleIn(previewPanel, mainColors.CUSTOM);
    }//GEN-LAST:event_jButton2ActionPerformed

  /**
   * Sets the selected color in the JColorChooser to be the corresponding color of the selected part
   */
  @SuppressWarnings("static-access")
  public void fixColor()
  {
    jColorChooser.setColor(mainColors.getColor(mainColors.CUSTOM, part));
  }
  
  public Colors getStyle()
  {
    return mainColors;
  }

  private void setCustomColor(byte style)
  {
    mainColors.setCustomColor(mainColors.getColor(style, part), part);
    jColorChooser.setColor(mainColors.getCustomColor(part));
//    mainColors.fixStyleIn(previewPanel);
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bhChooserPanel;
    private javax.swing.JPanel colorChooserPreviewPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JColorChooser jColorChooser;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JRadioButton setBackRadioButton;
    private javax.swing.JRadioButton setBorderRadioButton;
    private javax.swing.JRadioButton setBoxRadioButton;
    private javax.swing.ButtonGroup setColorButtonGroup;
    private javax.swing.JRadioButton setTextAreaRadioButton;
    private javax.swing.JRadioButton setTextRadioButton;
    private javax.swing.JButton useAstroButton;
    private javax.swing.JButton useHuskyButton;
    private javax.swing.JButton useMochaButton;
    // End of variables declaration//GEN-END:variables
  private AbstractColorChooserPanel BHColorChooserPanel;
  private byte part;
  Colors mainColors;
  javax.swing.Timer colorTimer;
}
