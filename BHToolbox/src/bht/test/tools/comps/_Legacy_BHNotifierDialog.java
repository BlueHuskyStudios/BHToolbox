/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * _Legacy_BHNotifierDialog.java
 *
 * Created on May 1, 2011, 3:16:05 AM
 */
package bht.test.tools.comps;

import bht.tools.fx.Colors;
import bht.tools.fx.CompAction;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Programmer
 */
public class _Legacy_BHNotifierDialog extends javax.swing.JDialog
{
  public _Legacy_BHNotifierDialog(String message, String title, byte buttonType)
  {
    this(message, title, buttonType, 5000, DEF_YES_LABEL, DEF_OK_LABEL, DEF_NO_LABEL, DEF_CANCEL_LABEL, true);
  }

  /**
   * 
   * @param message the message in the notifier
   * @param title the title of the notifier
   * @param buttonType simply add any buttons in that you want. For instance, for Yes, No, and Cancel buttons, use
   * <tt>YES_BUTTON + NO_BUTTON + CANCEL_BUTTON</tt>. Adding <tt>BLANK_BUTTONS</tt> won't do anything.
   * @param decay the number of milliseconds until the dialog closes automatically. Setting it to 0 or less will make it stay
   * open until closed.
   * @param yesLabel the text of the Yes button. Can be <tt>null</tt>
   * @param okLabel the text of the OK button. Can be <tt>null</tt>
   * @param noLabel the text of the No button. Can be <tt>null</tt>
   * @param cancelLabel  the text of the Cancel button. Can be <tt>null</tt>
   * @param alwaysOnTop set to <tt>true</tt> if you want the dialog to be on top of other windows
   */
  public _Legacy_BHNotifierDialog(String message, String title, int buttonType, int decay, String yesLabel, String okLabel, String noLabel,
                          String cancelLabel, boolean alwaysOnTop)
  {
    super();
    this.message = message;
    this.title = title;
    this.type = buttonType;
    this.yesLabel = yesLabel;
    this.okLabel = okLabel;
    this.noLabel = noLabel;
    this.cancelLabel = cancelLabel;
    this.alwaysOnTop = alwaysOnTop;
    initComponents();
    setSize(getPreferredSize());

    ca = new CompAction();

    closeEvent = new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        closeTimer.restart();
        closeTimer.stop();
        ca.ghostOut(getThis());
      }
    };
    
    closeTimer = new javax.swing.Timer(decay, closeEvent);
    if (decay > 0)
    {
      closeTimer.start();
    }
  }

  _Legacy_BHNotifierDialog()
  {
    this("[MESSAGE]", "[TITLE]", BLANK_BUTTONS);
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        yesButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(title);
        setAlwaysOnTop(alwaysOnTop);
        setFocusable(false);
        setFocusableWindowState(false);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 4, 4));

        yesButton.setText(yesLabel);
        if (usesYesButton())
        jPanel1.add(yesButton);

        okButton.setText(okLabel);
        if (usesOkButton())
        jPanel1.add(okButton);

        noButton.setText(noLabel);
        if (usesNoButton())
        jPanel1.add(noButton);

        cancelButton.setText(cancelLabel);
        if (usesCancelButton())
        jPanel1.add(cancelButton);

        if (usesButtons())
        {

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 2;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
            getContentPane().add(jPanel1, gridBagConstraints);
        }

        jTextArea1.setColumns(24);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setText(message);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextArea1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextArea1MouseExited(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        getContentPane().add(jScrollPane3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jTextArea1MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTextArea1MouseEntered
  {//GEN-HEADEREND:event_jTextArea1MouseEntered
    jTextArea1.setFont(jTextArea1.getFont().deriveFont(java.awt.Font.BOLD));
    jTextArea1.getAccessibleContext().setAccessibleDescription(Colors.FONT_STYLE_OVERRIDE + java.awt.Font.BOLD
                                                               + Colors.COMMAND_SEP);
  }//GEN-LAST:event_jTextArea1MouseEntered

  private void jTextArea1MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTextArea1MouseExited
  {//GEN-HEADEREND:event_jTextArea1MouseExited
    jTextArea1.setFont(jTextArea1.getFont().deriveFont(java.awt.Font.PLAIN));
    jTextArea1.getAccessibleContext().setAccessibleDescription(Colors.FONT_STYLE_OVERRIDE + java.awt.Font.PLAIN
                                                               + Colors.COMMAND_SEP);
  }//GEN-LAST:event_jTextArea1MouseExited

  private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
  {//GEN-HEADEREND:event_formComponentShown
    ca.ghostIn(getThis());
  }//GEN-LAST:event_formComponentShown
  public static void main(String[] args)
  {
    new _Legacy_BHNotifierDialog("Warning! I am a message! And good lord, do I appear to be quite the long one! It's a good thing I "
                         + "packed my spaghetti!", "This is a title!", (byte) (BLANK_BUTTONS)).setVisible(true);
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton noButton;
    private javax.swing.JButton okButton;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
  private java.awt.event.ActionListener closeEvent;
  private boolean alwaysOnTop;
  public static final byte YES_BUTTON = 0x1,
          NO_BUTTON = 0x2,
          CANCEL_BUTTON = 0x4,
          OK_BUTTON = 0x8,
          BLANK_BUTTONS = 0x0;
  private CompAction ca;
  private int type = BLANK_BUTTONS;
  public static final String DEF_YES_LABEL = "Yes", DEF_NO_LABEL = "No", DEF_CANCEL_LABEL = "Cancel", DEF_OK_LABEL = "OK";
  private String message, title, yesLabel, okLabel, noLabel, cancelLabel;
  private javax.swing.Timer closeTimer;

  public boolean usesYesButton()
  {
    return (YES_BUTTON & type) == YES_BUTTON;
  }

  public boolean usesOkButton()
  {
    return (OK_BUTTON & type) == OK_BUTTON;
  }

  public boolean usesNoButton()
  {
    return (NO_BUTTON & type) == NO_BUTTON;
  }

  public boolean usesCancelButton()
  {
    return (CANCEL_BUTTON & type) == CANCEL_BUTTON;
  }

  public boolean usesButtons()
  {
    return type != BLANK_BUTTONS;
  }

  private _Legacy_BHNotifierDialog getThis()
  {
    return this;
  }

  public void doCloseAction(java.awt.event.ActionEvent e)
  {
    closeEvent.actionPerformed(e);
  }

  /**
   * @deprecated passes nulls and zeroes to the close event. Use {@link #doCloseAction(java.awt.event.ActionEvent) }, instead.
   */
  public void doClose()
  {
    closeEvent.actionPerformed(new java.awt.event.ActionEvent(null, 0, null));
  }

  public CompAction getCompAction()
  {
    return ca;
  }
}
